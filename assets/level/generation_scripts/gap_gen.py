import level
import pre_builts

#Note
note = "generated by gap_gen.py"

#Settings
title = "The Gap"
width = 5760
height = 3250
mirrored = True

#Init
lev = level.Level(title, width, height, mirrored)

'''
Killing floor
'''
lev.add_kill_box(-2*width, 4*width, height, 3*height/2, mirror=False)

'''
Plats / Walls
'''
def build_box(x, y, w, h):
    lev.add_obstacle(x, x + w, y, y + h)

PLAT_TH = 50

def build_plat(x, y, w):
    build_box(x, y, w, PLAT_TH)

WALL_TH = 50

def build_wall(x, y, h):
    build_box(x, y, WALL_TH, h)


#Towers
PLAT_CEIL = 120

PLAT_H = 220
PLAT_X = 200
PLAT_W = 200

PLAT_OFFSET = 200
PLAT_TILT = 75

NUM_PLATS = 14

#Staircase
for i in range(NUM_PLATS):
    build_plat(PLAT_X + (PLAT_W + PLAT_OFFSET)*(i%2) + PLAT_TILT * i, PLAT_CEIL + PLAT_H * (i), PLAT_W)

#Center
CENTER_W = 400
CENTER_H = height - 1000
build_plat(width/2 - CENTER_W/2, CENTER_H, CENTER_W)

'''
Spawns
'''
#Side Spawn plats
build_plat(PLAT_X, height - PLAT_H, 2 * PLAT_W)

#For now, all clustered on same plats
for i in range(4):
    lev.add_player_spawn(PLAT_X + PLAT_W + (PLAT_W/2 * (1 if i%2 > 0 else -1)), height - PLAT_H - 60)

for i in range(2):
    lev.add_player_spawn(width/2 + (CENTER_W/4 * (1 if i%2 > 0 else -1)), CENTER_H - 60, mirror=False)

'''
Weapons
'''
lev.add_box_spawn(PLAT_X + PLAT_W/2, PLAT_CEIL - 60, ["pierce"])
lev.add_box_spawn(width/2, CENTER_H - 60, ["rocket"], mirror=False)

print "Saving complex..."
lev.save("../the_gap.json", note = note)